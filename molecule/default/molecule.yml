---
dependency:
  name: galaxy
driver:
  name: docker
lint:
  name: yamllint
  options:
    config-file: molecule/default/yaml-lint.yml
platforms:
  - name: instance
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu1804}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: false
    # - name: ubuntu1804
    #   image: "geerlingguy/docker-ubuntu1804-ansible:latest"
    #   command: ${MOLECULE_DOCKER_COMMAND:-""}
    #   volumes:
    #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
    #   privileged: true
    #   pre_build_image: false
    # - name: ubuntu1604
    #   image: "geerlingguy/docker-ubuntu1604-ansible:latest"
    #   command: ${MOLECULE_DOCKER_COMMAND:-""}
    #   volumes:
    #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
    #   privileged: true
    #   pre_build_image: false
    # - name: centos7
    #   image: "geerlingguy/docker-centos7-ansible:latest"
    #   command: ${MOLECULE_DOCKER_COMMAND:-""}
    #   volumes:
    #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
    #   privileged: true
    #   pre_build_image: false
    # - name: centos6
    #   image: "geerlingguy/docker-centos6-ansible:latest"
    #   command: ${MOLECULE_DOCKER_COMMAND:-""}
    #   volumes:
    #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
    #   privileged: true
    #   pre_build_image: false
    # - name: debian9
    #   image: "geerlingguy/docker-debian9-ansible:latest"
    #   command: ${MOLECULE_DOCKER_COMMAND:-""}
    #   volumes:
    #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
    #   privileged: true
    #   pre_build_image: false
provisioner:
  name: ansible
  lint:
    name: ansible-lint
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-playbook.yml}
scenario:
  name: default
verifier:
  name: testinfra
  lint:
    name: flake8
